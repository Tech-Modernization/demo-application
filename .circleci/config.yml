version: 2
jobs:
  build-and-push-image:
    machine: true
    steps:
      - checkout
      - run:
          name: Build docker image
          command: |
            echo ${GCP_CREDS} > ${HOME}/gcp-key.json
            docker build --rm=false -t eu.gcr.io/${GCP_PROJECT}/${IMAGE_NAME}:$CIRCLE_SHA1 .
      - run:
          name: Push docker image to gcr
          command: |
            gcloud auth activate-service-account --key-file=${HOME}/gcp-key.json
            gcloud --quiet config set project ${GCP_PROJECT}
            gcloud docker -- push eu.gcr.io/${GCP_PROJECT}/${IMAGE_NAME}:$CIRCLE_SHA1

  deploy-image:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run:
          name: Install envsubst
          command: |
            apt-get install gettext-base
      - run:
          name: Deploy K8s yaml
          command: |
            echo $GCP_CREDS | gcloud auth activate-service-account --key-file=-
            export IMAGE=eu.gcr.io/${GCP_PROJECT}/${IMAGE_NAME}
            export VERSION=${CIRCLE_SHA1:latest}
            gcloud --quiet config set project ${GCP_PROJECT}
            gcloud --quiet config set compute/zone ${CLUSTER_REGION}
            gcloud container clusters get-credentials ${CLUSTER_NAME}
            cat k8s/*.yaml | envsubst | kubectl apply -f -
      - run:
          name: Smoke test
          command: |
            sleep 30
            export HTTP_STATUS="$(curl -s -o /dev/null -w "%{http_code}" testmynewapplication.tk)"
            if [ $HTTP_STATUS -ge 400 ]; then exit 1; fi

workflows:
  version: 2
  build-and-deploy-image:
    jobs:
      - build-and-push-image
      - deploy-image:
          requires:
            - build-and-push-image
